<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="WordGame" script:language="StarBasic">&apos;************************************************************
&apos;	Copyright Â© 2007 Dmitri Popov
&apos;	Anyone may run this code.
&apos;	If you wish to modify or distribute this code, then
&apos;	you are granted a license to do so under the terms
&apos;	of the Gnu General Public License.
&apos;	See:  http://www.gnu.org/licenses/gpl.html
&apos;************************************************************

REM The WordHunt macro shows how to generate random number, use arrays,
REM ask user for input, specify If conditions, and use loops.

Sub WordHunt()
Dim WordArray()
Dim RandomNumber As Integer
Dim RandomWord As String, Message As String, Answer As String
Dim InputWord As String, InputMessage As String, InputTitle As String

REM First of all, let&apos;s populate the WordArray with some words.
REM Note that item numbering in any array always starts with 0.
REM This means that the word &quot;apple&quot; is item number 0
WordArray=Array(&quot;apple&quot;, &quot;potato&quot;, &quot;carrot&quot;, &quot;cucumber&quot;, &quot;orange&quot;)
REM To make the game a bit more user-friendly, let&apos;s show the display message
REM asking user whether she wants to play and explaining the basic rules.
REM Note the Join(WordArray(), &quot;, &quot;) function. It lists all the words in teh WordArray.

Counter=3
&apos;Message=&quot;Writer has picked up one of these words: &quot; &amp; Chr(13) &amp; Chr(13) &amp; Join(WordArray(), &quot;, &quot;) &amp; Chr(13) &amp; Chr(13) &amp; &quot;Would you like to guess which one?&quot;
&apos;Answer=MsgBox(Message,4,&quot;Play&quot;)
Answer=MsgBox (FmtString(GetLocalizedString(27),Array(Chr(13),Chr(13),Join(WordArray(), &quot;, &quot;),CHR(13),CHR(13))),,_
GetLocalizedString(28))
If Answer=7 then End

REM The While ... WEnd block makes the game run until you either guess the correct word
REM or you run out of attemps.

While Counter&gt;0
REM Next, we need to generate a random number from 0 to 4.
REM To do this, we simply use the UBound() function that returns the upper limit of the Array

RandomNumber=Rnd()*UBound(WordArray())
REM Time to pick up a random word from the array.
RandomWord=WordArray(RandomNumber)
REM Now, we have to ask the user to type a word. 
&apos;InputMessage=&quot;Type your word:&quot;
&apos;InputTitle=&quot;Word game&quot;
InputMessage=GetLocalizedString(29)
InputTitle=GetLocalizedString(30)
InputWord=InputBox(InputMessage, InputTitle)
REM To stop the game, user can type a specified stop word.
REM In this case, if the field is left empty the macro exits the loop and stops.
If InputWord=&quot;&quot; then :End
End if
REM Otherwise the If block check whether the word entered by the user is the same
REM as the random word.
If InputWord=RandomWord then
REM If it is, then it displays the following message:
&apos;MsgBox (&quot;Yep, that&apos;s the word!&quot; &amp; Chr(13) &amp; &quot;You win!&quot;, , &quot;Congratulations!&quot;) : End
ZMessageBox(31, ,32) : End
REM But if it&apos;s not...
else
REM ... it displays another message.
Counter=Counter-1
&apos;If Counter=0 Then MsgBox (&quot;No more attemps left!&quot; &amp; Chr(13) &amp; &quot;Sorry, you lose!&quot;, , &quot;Better luck next time!&quot;) : End
If Counter=0 Then ZMessageBox(35, ,36) : End
End if
&apos;MsgBox (&quot;Nope, try again.&quot; &amp; Chr(13) &amp; &quot;You have &quot; &amp; Counter &amp; &quot; attempts left.&quot;, , &quot;Try again&quot;)
MsgBox (FmtString(GetLocalizedString(33),Array(Chr(13),Counter)),,_
GetLocalizedString(34))
WEnd
End Sub


</script:module>
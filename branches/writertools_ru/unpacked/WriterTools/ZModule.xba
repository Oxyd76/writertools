<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ZModule" script:language="StarBasic">&apos;************************************************************
&apos;	Copyright Â© 2007 Konstantin Lavrov
&apos;	Anyone may run this code.
&apos;	If you wish to modify or distribute this code, then
&apos;	you are granted a license to do so under the terms
&apos;	of the Gnu General Public License.
&apos;	See:  http://www.gnu.org/licenses/gpl.html
&apos;************************************************************

&apos; List of Messages
&apos; 0 - Test
&apos; 1 - All done!
&apos; 2 - The document has been sent.
&apos; 3 - Attention!
&apos; 4 - You must save the document first!
&apos; 5 - The document has been saved.
&apos; 6 - Please select a word to look up
&apos; 7 - Please select a word or a sentence for translate
&apos; 8 - The email address field is empty!
&apos; 9 - Please select a word or a text fragment first
&apos; 10 - Please select an address info to map
&apos; 11 - Connection to the database failed. Make sure that the %NameDB% database is registered in OpenOffice.org. See Writer&apos;s Tools Use Guide for further info.
&apos; 12 - Connection failed!
&apos; 13 - The text snippet has been saved.
&apos; 14 - The FTP address field is empty!
&apos; 15 - The document has been uploaded.
&apos; 16 - A timing session is in progress!\nStart a new one?
&apos; 17 - Do you want to start a timing session?
&apos; 18 - Start Timing?
&apos; 19 - End current timing session?
&apos; 20 - End Timing?
&apos; 21 - No session running, nothing to stop.
&apos; 22 - Save
&apos; 23 - Would you like to save the data?
&apos; 24 - The data has been saved.
&apos; 25 - Elapsed time: ~ %ElapsedTimeMinutes% minute(s) or %ElapsedTime% second(s)%Chr(13)%Started at %StartTime% - Ended at %EndTime%
&apos; 26 - Elapsed time
&apos; 27 - Writer has picked up one of these words: %Chr(13)%%Chr(13)%%JoinWordArray%%Chr(13)%%Chr(13)%Would you like to guess which one?
&apos; 28 - Play
&apos; 29 - Type your word:
&apos; 30 - Word game
&apos; 31 - Yep, that&apos;s the word!\nYou win!
&apos; 32 - Congratulations!
&apos; 33 - Nope, try again.%Chr(13)%You have %Counter% attemps left.
&apos; 34 - Try again
&apos; 35 - No more attemps left!\nSorry, you lose!
&apos; 36 - Better luck next time!
&apos; 37 - Timer is running...
&apos; 38 - Task list
&apos; 39 - The tasks have been purged.
&apos; 40 - The task has been added.
&apos; 41 - The post has been added.
&apos; 42 - Word of the Day
&apos; 43 - Enter the FTP address
&apos; 44 - Remote Backup
&apos; 45 - Summary of changes
&apos; 46 - Enter a brief description of changes
&apos; 47 - Email address
&apos; 48 - Do you really want to purge all tasks?
&apos; 49 - The task list is empty

&apos;Const NumberOfTextIds  = 50

Sub Main

End Sub

Function GetLocalizedString( uId as Integer) as String

&apos;  exitOK=com.sun.star.ui.dialogs.ExecutableDialogResults.OK
  If (Not DialogLibraries.isLibraryLoaded(&quot;WriterTools&quot;)) Then
    DialogLibraries.LoadLibrary(&quot;WriterTools&quot;)
  End If
  Library=DialogLibraries.GetByName(&quot;WriterTools&quot;)
  &apos; Here we store strings for MsgBox
  TheDialog=Library.GetByName(&quot;ZDialog&quot;)
  Dialog=CreateUnoDialog(TheDialog)

  ZItems=Dialog.getControl(&quot;ListOfMessage&quot;)
  If (uId &gt;=0 and uId &lt; ZItems.ItemCount) Then GetLocalizedString = ZItems.Peer.Items(uId) Else GetLocalizedString = &quot;&quot;

End Function


Function ZMessageBox(optional IM As Integer, optional MBT as Integer,optional IT As Integer)
  Dim SMess As String
  Dim STitl As String
  
  If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
  GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
  End If

  If IsMissing(IM) Then IM = 0
  If IsMissing(IT) Then IT =1
  
  SMess = GetLocalizedString(IM)
  STitl = GetLocalizedString(IT)
  ZMessageBox = MsgBox(ReplaceString(SMess,Chr(13),&quot;\n&quot;),MBT,STitl)
End Function

Function FmtString(BigString as String, fmtArray(), Optional PreString as String, Optional PostString as String) As String

&apos;See functions in String module of GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)

  Dim Pos%, i%
  Dim TmpString As String
  Dim ResString As String
     
  If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
  GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
  End If


  If IsMissing(PreString) Then PreString = &quot;%&quot;
  If IsMissing(PostString) Then PostString =&quot;%&quot;
  Pos = 1
  ResString = BigString
  For i = 0 To Ubound(fmtArray())
    TmpString = FindPartString(BigString, PreString, PostString, Pos)
	If TmpString = &quot;&quot; Then
		Exit For
	Else		
	ResString = ReplaceString(ResString,fmtArray(i),PreString &amp; TmpString &amp; PostString)
	End If
	FmtString = ResString
  Next i
  FmtString = ResString
End Function
</script:module>